#!/usr/local/bin/python
# -*- coding: utf8 -*-

#osm-hell

import cgi, sys, json
import psycopg2
import psycopg2.extras
import db_config

#rows=['id','lat','lon','city','street','house','flat','contact','phone','required','info','condition_house','status']
#rowsInt=['id','status']
#rowsFloat=['lat','lon']

rows=['lat','lon','nameperson', 'dob', 'age', 'city', 'street', 'house', 'source', 'sourceperson', 'status', 'details', 'sourcecontact', 'relationship',
'anthropometric', 'psychological', 'medicalinfo', 'timestamp', 'ticketstatus', 'infomoderators', 'infovolunteer', 'namevolunteer', 'datechecking']
rowsInt=['id']
rowsFloat=['lat','lon']
rowsKey=['id']
rowsAll=rowsKey+rows

key='mhjhubb74nisd76dj2i138826hir7I78fhdf8s'

output={}

def getdata():
  getval={}
  getval['_search'] = getvalues.getfirst('_search','')

  where = ' true '
  
  for name in rowsAll:
    try:
      i=rowsInt.index(name)
      getval[name] = int(getvalues.getfirst(name,'0'))
      if (getval['_search']=='true' and getval[name]<>0):
        where = where + ' AND '+name+' = %('+name+')s'
      continue
    except ValueError:
      try:
        i=rowsFloat.index(name)
        getval[name] = float(getvalues.getfirst(name,'0'))
        if (getval['_search']=='true' and getval[name]<>0):
          where = where + ' AND '+name+' = %('+name+')s'
        continue
      except ValueError:
        getval[name] = getvalues.getfirst(name,'')
        if (getval['_search']=='true' and getval[name]<>''):
          getval[name]=getval[name]+'%'
          where = where + ' AND '+name+' ILIKE %('+name+')s'
          
  getsidx = getvalues.getfirst('sidx',rowsAll[0])
  i=rowsAll.index(getsidx)
  getsord = getvalues.getfirst('sord','asc')
  if (getsord<>'asc' and getsord<>'desc'):
    getsord='asc'
  order=' '+getsidx+' '+getsord+' '
        
  
  for name in rowsAll:
    getval[name] = getvalues.getfirst(name,'')
    if (getval[name]<>'' and getval['_search']<>''):
      getval[name]=getval[name]+'%'
      where = where + ' AND '+name+' ILIKE %('+name+')s'

  cur = conn.cursor(cursor_factory=psycopg2.extras.RealDictCursor)
  cur.execute("""
    SELECT *
    FROM
      hell_peopleseach
    WHERE
      """+where+"""
    ORDER BY
      """+order+"""
  ;""",getval)
  data=[]
  for record in cur:
#    for name in rowsFloat:
#      if ((name in record) and record[name]<>''):
#        record[name]=float(record[name])

    data.append(record)
  #print json.dumps(data)
  output['rows']=data


def setdata():
  getval={}
  getval['oper'] = getvalues.getfirst('oper','')
  getval['_redirect'] = getvalues.getfirst('_redirect','')
  getval['_key'] = getvalues.getfirst('_key','')
  for name in rowsAll:
    try:
      i=rowsInt.index(name)
      getval[name] = int(getvalues.getfirst(name,'0'))
      continue
    except ValueError:
      try:
        i=rowsFloat.index(name)
        getval[name] = float(getvalues.getfirst(name,'0'))
        continue
      except ValueError:
        getval[name] = getvalues.getfirst(name,'')

  cur = conn.cursor()
  try:
    if ( getval['oper'] == 'add' ):
      cur.execute("""
        INSERT INTO hell_peopleseach(""" + ', '.join(rows) + """ )
          VALUES ( %(""" + ')s, %('.join(rows) + """)s );
      ;""", getval)
    elif ( getval['oper'] == 'edit' and getval['_key']==key ):
      setcolumn = ''
      for name in rows:
        setcolumn = setcolumn + name + '=%(' + name + ')s, '
      setcolumn = setcolumn[:-2]
      cur.execute("""
        UPDATE hell_peopleseach
          SET """ + setcolumn + """
          WHERE id=%(id)s;
      ;""", getval)

    conn.commit()
  except Exception, e:
    output['error'] = str(e)
  if (getval['_redirect'] == 'viewpage'):
    output['_redirect'] = '../'
  output['deb']=getval

def getpoint():
  getval={}
  getval['maxlat'] = float(getvalues.getfirst('maxlat','0'))
  getval['maxlon'] = float(getvalues.getfirst('maxlon','0'))
  getval['minlat'] = float(getvalues.getfirst('minlat','0'))
  getval['minlon'] = float(getvalues.getfirst('minlon','0'))
  for k in getval:
    if (getval[k] == 0):
      output['error']=("%(k)s is not null"%{'k':k})
      return

  cur = conn.cursor(cursor_factory=psycopg2.extras.RealDictCursor)
  cur.execute("""
    SELECT *
      FROM hell_peopleseach
      WHERE
        lat > %(minlat)s
        and lat < %(maxlat)s
        and lon > %(minlon)s
        and lon < %(maxlon)s
  ;""",getval)
  data = []
  for record in cur:
    data.append(record)
  output['data']=data


  

  
  

#send = "Content-type: text/javascript;" # debug
send = "Content-type: application/json;" # production
send = send + " Charset=Utf-8\nAccess-Control-Allow-Origin: *\nAccess-Control-Request-Headers: X-Requested-With, X-Prototype-Version\nAccess-Control-Request-Method: GET\n"
#print send # production

conn = psycopg2.connect(host=db_config.site_host, database=db_config.site_database, user=db_config.site_user, password=db_config.site_password)

getvalues=cgi.FieldStorage()
output['action'] = getvalues.getfirst('action','')
output['_redirect'] = ''
if output['action'] == 'getdata':
  getdata()
elif output['action'] == 'setdata':
  setdata()
elif output['action'] == 'getpoint':
  getpoint()
else:
  #print "Request-URI: index.php"
  #print "Content-Location: index.php"
  #print "Location: index.php"
  output['error']='wrong action'

if (output['_redirect'] <> ''):
  print "Request-URI: "+output['_redirect']
  print "Content-Location: "+output['_redirect']
  print "Location: "+output['_redirect']

print send
  
#if (output['action'] <> 'getdata'):
  #if (output['type'] == 'callback'):
print json.dumps(output)
